{
  "version": 3,
  "file": "socket.service.js",
  "sources": [
    "ng://@soushians/infra/projects/soushians/infra/src/lib/socket/socket.service.ts"
  ],
  "sourcesContent": [
    "import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { MatSnackBar } from '@angular/material';\r\n\r\n\r\n// import * as socketIo from 'socket.io-client';\r\n\r\nconst SERVER_URL = 'http://localhost:3000';\r\n\r\ninterface Message {\r\n    payload: any;\r\n}\r\n\r\n@Injectable()\r\nexport class SocketService {\r\n    // private socket:any;\r\n\r\n    // public initSocket(): void {\r\n    //     this.socket = socketIo(SERVER_URL);\r\n    // }\r\n\r\n    // public send(message: String): void {\r\n    //     this.socket.emit('message', message);\r\n    // }\r\n\r\n    // public onMessage(): Observable<any> {\r\n    //     return new Observable(observer => {\r\n    //         this.socket.on('message', (data:any) => {\r\n    //             observer.next(data);\r\n    //         });\r\n    //     });\r\n    // }\r\n\r\n    // public onConnect(): Observable<any> {\r\n    //     return new Observable(observer => {\r\n    //         this.socket.on('connect', () => observer.next());\r\n    //     });\r\n    // }\r\n\r\n    // public onDisconnect(): Observable<any> {\r\n    //     return new Observable(observer => {\r\n    //         this.socket.on('disconnect', () => observer.next());\r\n    //     });\r\n    // }\r\n}\r\nexport var SocketServiceStub = {}"
  ],
  "names": [],
  "mappings": ";;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;;AAO3C,uBAAM,UAAU,GAAG,uBAAuB,CAAC;;;;;;;;;AAO3C,MAAM;;;YADL,UAAU;;AAgCX,MAAM,CAAC,qBAAI,iBAAiB,GAAG,EAAE,CAAA"
}
